#!/bin/bash
set -euo pipefail

DAY=$((60 * 60 * 24))
TODAY=$(date --date="today 00:00:00" +%s)

in_season() {
    # Prints the given emoji if TODAY is within date range.
    # End date range is non-inclusive.
    local TODAY=$1
    local end=$2
    local range=$3
    local emoji=$4

    local season=$(($DAY * $range))
    local start=$(($end - $season))

    if [ "$TODAY" -ge "$start" -a "$TODAY" -lt "$end" ]; then
        echo $emoji
        exit 0
    fi
}

nth_weekday() {
    local month=$1
    local expected_weekday=$2  # Sunday is 1
    local nth_week=$3  # First week is 1
    local day=$(
        cal -1 "${month}" | \
            awk '{print $'${expected_weekday}'}' | \
            tail -n +3 | \
            sed '/^$/d' | \
            sed -n "${nth_week}p"
    )
    printf $(date --date="${month} ${day} 00:00:00" +%s)
}

xmas_end=$(date --date="december 26 00:00:00" +%s)
in_season $TODAY $xmas_end 14 üéÑ

# The number 6 means Friday, which is when Thanksgiving ends.
# The number 4 means the fourth week of the month.
thanksgiving_end=$(nth_weekday 'november' 6 4)
in_season $TODAY $thanksgiving_end 7 ü¶É

newyears_end=$(date --date="january 1 00:00:00" +%s)
in_season $TODAY $newyears_end 5 üçæ

valentines_end=$(date --date="february 15 00:00:00" +%s)
in_season $TODAY $valentines_end 7 ‚ù§Ô∏è

echo üêö
